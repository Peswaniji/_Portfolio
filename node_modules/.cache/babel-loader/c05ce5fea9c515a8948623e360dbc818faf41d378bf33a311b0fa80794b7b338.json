{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TiltUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction updateTilt(particle, delta) {\n  var _a;\n  if (!particle.tilt) {\n    return;\n  }\n  const tilt = particle.options.tilt;\n  const tiltAnimation = tilt.animation;\n  const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const max = 2 * Math.PI;\n  if (!tiltAnimation.enable) {\n    return;\n  }\n  switch (particle.tilt.status) {\n    case Enums_1.AnimationStatus.increasing:\n      particle.tilt.value += speed;\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n      break;\n    case Enums_1.AnimationStatus.decreasing:\n    default:\n      particle.tilt.value -= speed;\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n      break;\n  }\n}\nclass TiltUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const tiltOptions = particle.options.tilt;\n    particle.tilt = {\n      enable: tiltOptions.enable,\n      value: (0, Utils_1.getRangeValue)(tiltOptions.value) * Math.PI / 180,\n      sinDirection: Math.random() >= 0.5 ? 1 : -1,\n      cosDirection: Math.random() >= 0.5 ? 1 : -1\n    };\n    let tiltDirection = tiltOptions.direction;\n    if (tiltDirection === Enums_1.TiltDirection.random) {\n      const index = Math.floor(Math.random() * 2);\n      tiltDirection = index > 0 ? Enums_1.TiltDirection.counterClockwise : Enums_1.TiltDirection.clockwise;\n    }\n    switch (tiltDirection) {\n      case Enums_1.TiltDirection.counterClockwise:\n      case \"counterClockwise\":\n        particle.tilt.status = Enums_1.AnimationStatus.decreasing;\n        break;\n      case Enums_1.TiltDirection.clockwise:\n        particle.tilt.status = Enums_1.AnimationStatus.increasing;\n        break;\n    }\n    const tiltAnimation = particle.options.tilt.animation;\n    if (tiltAnimation.enable) {\n      particle.tilt.velocity = tiltAnimation.speed / 360 * this.container.retina.reduceFactor;\n      if (!tiltAnimation.sync) {\n        particle.tilt.velocity *= Math.random();\n      }\n    }\n  }\n  isEnabled(particle) {\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateTilt(particle, delta);\n  }\n}\nexports.TiltUpdater = TiltUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","TiltUpdater","Enums_1","require","Utils_1","updateTilt","particle","delta","_a","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","AnimationStatus","increasing","decreasing","constructor","container","init","tiltOptions","getRangeValue","sinDirection","random","cosDirection","tiltDirection","direction","TiltDirection","index","floor","counterClockwise","clockwise","retina","reduceFactor","sync","isEnabled","destroyed","spawning","update"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Updaters/Tilt/TiltUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TiltUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case Enums_1.AnimationStatus.increasing:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case Enums_1.AnimationStatus.decreasing:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nclass TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: ((0, Utils_1.getRangeValue)(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === Enums_1.TiltDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? Enums_1.TiltDirection.counterClockwise : Enums_1.TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case Enums_1.TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.TiltDirection.clockwise:\n                particle.tilt.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = (tiltAnimation.speed / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\nexports.TiltUpdater = TiltUpdater;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}