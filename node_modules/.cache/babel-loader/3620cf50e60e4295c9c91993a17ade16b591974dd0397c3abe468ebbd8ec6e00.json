{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AngleUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction updateAngle(particle, delta) {\n  var _a;\n  const rotate = particle.rotate;\n  if (!rotate) {\n    return;\n  }\n  const rotateOptions = particle.options.rotate;\n  const rotateAnimation = rotateOptions.animation;\n  const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const max = 2 * Math.PI;\n  if (!rotateAnimation.enable) {\n    return;\n  }\n  switch (rotate.status) {\n    case Enums_1.AnimationStatus.increasing:\n      rotate.value += speed;\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n      break;\n    case Enums_1.AnimationStatus.decreasing:\n    default:\n      rotate.value -= speed;\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n      break;\n  }\n}\nclass AngleUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const rotateOptions = particle.options.rotate;\n    particle.rotate = {\n      enable: rotateOptions.animation.enable,\n      value: (0, Utils_1.getRangeValue)(rotateOptions.value) * Math.PI / 180\n    };\n    let rotateDirection = rotateOptions.direction;\n    if (rotateDirection === Enums_1.RotateDirection.random) {\n      const index = Math.floor(Math.random() * 2);\n      rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n    }\n    switch (rotateDirection) {\n      case Enums_1.RotateDirection.counterClockwise:\n      case \"counterClockwise\":\n        particle.rotate.status = Enums_1.AnimationStatus.decreasing;\n        break;\n      case Enums_1.RotateDirection.clockwise:\n        particle.rotate.status = Enums_1.AnimationStatus.increasing;\n        break;\n    }\n    const rotateAnimation = particle.options.rotate.animation;\n    if (rotateAnimation.enable) {\n      particle.rotate.velocity = rotateAnimation.speed / 360 * this.container.retina.reduceFactor;\n      if (!rotateAnimation.sync) {\n        particle.rotate.velocity *= Math.random();\n      }\n    }\n  }\n  isEnabled(particle) {\n    const rotate = particle.options.rotate;\n    const rotateAnimation = rotate.animation;\n    return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateAngle(particle, delta);\n  }\n}\nexports.AngleUpdater = AngleUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","AngleUpdater","Enums_1","require","Utils_1","updateAngle","particle","delta","_a","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","AnimationStatus","increasing","decreasing","constructor","container","init","getRangeValue","rotateDirection","direction","RotateDirection","random","index","floor","counterClockwise","clockwise","retina","reduceFactor","sync","isEnabled","destroyed","spawning","path","update"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Updaters/Angle/AngleUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AngleUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction updateAngle(particle, delta) {\n    var _a;\n    const rotate = particle.rotate;\n    if (!rotate) {\n        return;\n    }\n    const rotateOptions = particle.options.rotate;\n    const rotateAnimation = rotateOptions.animation;\n    const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case Enums_1.AnimationStatus.increasing:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case Enums_1.AnimationStatus.decreasing:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n}\nclass AngleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: ((0, Utils_1.getRangeValue)(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case Enums_1.RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.RotateDirection.clockwise:\n                particle.rotate.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = particle.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.velocity = (rotateAnimation.speed / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n    }\n}\nexports.AngleUpdater = AngleUpdater;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}