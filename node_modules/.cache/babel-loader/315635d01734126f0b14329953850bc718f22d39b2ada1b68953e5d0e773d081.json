{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkInstance = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nclass LinkInstance {\n  constructor(container) {\n    this.container = container;\n  }\n  particleCreated(particle) {\n    const linkParticle = particle;\n    linkParticle.links = [];\n  }\n  particleDestroyed(particle) {\n    const linkParticle = particle;\n    linkParticle.links = [];\n  }\n  drawParticle(context, particle) {\n    const linkParticle = particle;\n    const container = this.container;\n    const particles = container.particles;\n    const pOptions = particle.options;\n    if (linkParticle.links.length > 0) {\n      context.save();\n      const p1Links = linkParticle.links.filter(l => {\n        const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n        return linkFreq <= pOptions.links.frequency;\n      });\n      for (const link of p1Links) {\n        const p2 = link.destination;\n        if (pOptions.links.triangles.enable) {\n          const links = p1Links.map(l => l.destination);\n          const vertices = p2.links.filter(t => {\n            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n            return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n          });\n          if (vertices.length) {\n            for (const vertex of vertices) {\n              const p3 = vertex.destination;\n              const triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n              if (triangleFreq > pOptions.links.triangles.frequency) {\n                continue;\n              }\n              this.drawLinkTriangle(linkParticle, link, vertex);\n            }\n          }\n        }\n        if (link.opacity > 0 && container.retina.linksWidth > 0) {\n          this.drawLinkLine(linkParticle, link);\n        }\n      }\n      context.restore();\n    }\n  }\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link1.destination;\n    const p3 = link2.destination;\n    const triangleOptions = p1.options.links.triangles;\n    const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n    if (opacityTriangle <= 0) {\n      return;\n    }\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    const pos3 = p3.getPosition();\n    container.canvas.draw(ctx => {\n      if ((0, Utils_1.getDistance)(pos1, pos2) > container.retina.linksDistance || (0, Utils_1.getDistance)(pos3, pos2) > container.retina.linksDistance || (0, Utils_1.getDistance)(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n      let colorTriangle = (0, Utils_1.colorToRgb)(triangleOptions.color);\n      if (!colorTriangle) {\n        const linksOptions = p1.options.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = (0, Utils_1.getLinkColor)(p1, p2, linkColor);\n      }\n      if (!colorTriangle) {\n        return;\n      }\n      (0, Utils_1.drawLinkTriangle)(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    });\n  }\n  drawLinkLine(p1, link) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link.destination;\n    let opacity = link.opacity;\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    container.canvas.draw(ctx => {\n      var _a, _b;\n      let colorLine;\n      const twinkle = p1.options.twinkle.lines;\n      if (twinkle.enable) {\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = (0, Utils_1.colorToRgb)(twinkle.color);\n        const twinkling = Math.random() < twinkleFreq;\n        if (twinkling && twinkleRgb !== undefined) {\n          colorLine = twinkleRgb;\n          opacity = twinkle.opacity;\n        }\n      }\n      if (!colorLine) {\n        const linksOptions = p1.options.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = (0, Utils_1.getLinkColor)(p1, p2, linkColor);\n      }\n      if (!colorLine) {\n        return;\n      }\n      const width = (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n      const maxDistance = (_b = p1.retina.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n      (0, Utils_1.drawLinkLine)(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    });\n  }\n}\nexports.LinkInstance = LinkInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","LinkInstance","Utils_1","require","constructor","container","particleCreated","particle","linkParticle","links","particleDestroyed","drawParticle","context","particles","pOptions","options","length","save","p1Links","filter","l","linkFreq","getLinkFrequency","destination","frequency","link","p2","triangles","enable","map","vertices","t","indexOf","vertex","p3","triangleFreq","getTriangleFrequency","drawLinkTriangle","opacity","retina","linksWidth","drawLinkLine","restore","p1","link1","link2","_a","actualOptions","triangleOptions","opacityTriangle","pos1","getPosition","pos2","pos3","canvas","draw","ctx","getDistance","linksDistance","colorTriangle","colorToRgb","color","linksOptions","linkColor","id","undefined","linksColors","get","linksColor","getLinkColor","backgroundMask","composite","_b","colorLine","twinkle","lines","twinkleFreq","twinkleRgb","twinkling","Math","random","width","maxDistance","size","warp","shadow"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Interactions/Particles/Links/LinkInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkInstance = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nclass LinkInstance {\n    constructor(container) {\n        this.container = container;\n    }\n    particleCreated(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    particleDestroyed(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    drawParticle(context, particle) {\n        const linkParticle = particle;\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (linkParticle.links.length > 0) {\n            context.save();\n            const p1Links = linkParticle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(linkParticle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(linkParticle, link);\n                }\n            }\n            context.restore();\n        }\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        container.canvas.draw((ctx) => {\n            if ((0, Utils_1.getDistance)(pos1, pos2) > container.retina.linksDistance ||\n                (0, Utils_1.getDistance)(pos3, pos2) > container.retina.linksDistance ||\n                (0, Utils_1.getDistance)(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = (0, Utils_1.colorToRgb)(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = (0, Utils_1.getLinkColor)(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            (0, Utils_1.drawLinkTriangle)(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        container.canvas.draw((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = (0, Utils_1.colorToRgb)(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = (0, Utils_1.getLinkColor)(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.retina.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            (0, Utils_1.drawLinkLine)(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n}\nexports.LinkInstance = LinkInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}