{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceColorSvg = exports.downloadSvgImage = exports.loadImage = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction loadImage(source) {\n  return new Promise((resolve, reject) => {\n    if (!source) {\n      reject(\"Error tsParticles - No image.src\");\n      return;\n    }\n    const image = {\n      source: source,\n      type: source.substr(source.length - 3)\n    };\n    const img = new Image();\n    img.addEventListener(\"load\", () => {\n      image.element = img;\n      resolve(image);\n    });\n    img.addEventListener(\"error\", () => {\n      reject(`Error tsParticles - loading image: ${source}`);\n    });\n    img.src = source;\n  });\n}\nexports.loadImage = loadImage;\nasync function downloadSvgImage(source) {\n  if (!source) {\n    throw new Error(\"Error tsParticles - No image.src\");\n  }\n  const image = {\n    source: source,\n    type: source.substr(source.length - 3)\n  };\n  if (image.type !== \"svg\") {\n    return loadImage(source);\n  }\n  const response = await fetch(image.source);\n  if (!response.ok) {\n    throw new Error(\"Error tsParticles - Image not found\");\n  }\n  image.svgData = await response.text();\n  return image;\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  const {\n    svgData\n  } = imageShape;\n  if (!svgData) {\n    return \"\";\n  }\n  if (svgData.includes(\"fill\")) {\n    const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n    return svgData.replace(currentColor, () => (0, Utils_1.getStyleFromHsl)(color, opacity));\n  }\n  const preFillIndex = svgData.indexOf(\">\");\n  return `${svgData.substring(0, preFillIndex)} fill=\"${(0, Utils_1.getStyleFromHsl)(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n}\nexports.replaceColorSvg = replaceColorSvg;","map":{"version":3,"names":["Object","defineProperty","exports","value","replaceColorSvg","downloadSvgImage","loadImage","Utils_1","require","source","Promise","resolve","reject","image","type","substr","length","img","Image","addEventListener","element","src","Error","response","fetch","ok","svgData","text","imageShape","color","opacity","includes","currentColor","replace","getStyleFromHsl","preFillIndex","indexOf","substring"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Shapes/Image/Utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceColorSvg = exports.downloadSvgImage = exports.loadImage = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction loadImage(source) {\n    return new Promise((resolve, reject) => {\n        if (!source) {\n            reject(\"Error tsParticles - No image.src\");\n            return;\n        }\n        const image = {\n            source: source,\n            type: source.substr(source.length - 3),\n        };\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            resolve(image);\n        });\n        img.addEventListener(\"error\", () => {\n            reject(`Error tsParticles - loading image: ${source}`);\n        });\n        img.src = source;\n    });\n}\nexports.loadImage = loadImage;\nasync function downloadSvgImage(source) {\n    if (!source) {\n        throw new Error(\"Error tsParticles - No image.src\");\n    }\n    const image = {\n        source: source,\n        type: source.substr(source.length - 3),\n    };\n    if (image.type !== \"svg\") {\n        return loadImage(source);\n    }\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        throw new Error(\"Error tsParticles - Image not found\");\n    }\n    image.svgData = await response.text();\n    return image;\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    if (svgData.includes(\"fill\")) {\n        const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n        return svgData.replace(currentColor, () => (0, Utils_1.getStyleFromHsl)(color, opacity));\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${(0, Utils_1.getStyleFromHsl)(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n}\nexports.replaceColorSvg = replaceColorSvg;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,gBAAgB,GAAGH,OAAO,CAACI,SAAS,GAAG,KAAK,CAAC;AAC/E,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,SAASF,SAASA,CAACG,MAAM,EAAE;EACvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,IAAI,CAACH,MAAM,EAAE;MACTG,MAAM,CAAC,kCAAkC,CAAC;MAC1C;IACJ;IACA,MAAMC,KAAK,GAAG;MACVJ,MAAM,EAAEA,MAAM;MACdK,IAAI,EAAEL,MAAM,CAACM,MAAM,CAACN,MAAM,CAACO,MAAM,GAAG,CAAC;IACzC,CAAC;IACD,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAM;MAC/BN,KAAK,CAACO,OAAO,GAAGH,GAAG;MACnBN,OAAO,CAACE,KAAK,CAAC;IAClB,CAAC,CAAC;IACFI,GAAG,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAM;MAChCP,MAAM,CAAC,sCAAsCH,MAAM,EAAE,CAAC;IAC1D,CAAC,CAAC;IACFQ,GAAG,CAACI,GAAG,GAAGZ,MAAM;EACpB,CAAC,CAAC;AACN;AACAP,OAAO,CAACI,SAAS,GAAGA,SAAS;AAC7B,eAAeD,gBAAgBA,CAACI,MAAM,EAAE;EACpC,IAAI,CAACA,MAAM,EAAE;IACT,MAAM,IAAIa,KAAK,CAAC,kCAAkC,CAAC;EACvD;EACA,MAAMT,KAAK,GAAG;IACVJ,MAAM,EAAEA,MAAM;IACdK,IAAI,EAAEL,MAAM,CAACM,MAAM,CAACN,MAAM,CAACO,MAAM,GAAG,CAAC;EACzC,CAAC;EACD,IAAIH,KAAK,CAACC,IAAI,KAAK,KAAK,EAAE;IACtB,OAAOR,SAAS,CAACG,MAAM,CAAC;EAC5B;EACA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACX,KAAK,CAACJ,MAAM,CAAC;EAC1C,IAAI,CAACc,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIH,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACAT,KAAK,CAACa,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACrC,OAAOd,KAAK;AAChB;AACAX,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAC3C,SAASD,eAAeA,CAACwB,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAE;EACjD,MAAM;IAAEJ;EAAQ,CAAC,GAAGE,UAAU;EAC9B,IAAI,CAACF,OAAO,EAAE;IACV,OAAO,EAAE;EACb;EACA,IAAIA,OAAO,CAACK,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC1B,MAAMC,YAAY,GAAG,sGAAsG;IAC3H,OAAON,OAAO,CAACO,OAAO,CAACD,YAAY,EAAE,MAAM,CAAC,CAAC,EAAEzB,OAAO,CAAC2B,eAAe,EAAEL,KAAK,EAAEC,OAAO,CAAC,CAAC;EAC5F;EACA,MAAMK,YAAY,GAAGT,OAAO,CAACU,OAAO,CAAC,GAAG,CAAC;EACzC,OAAO,GAAGV,OAAO,CAACW,SAAS,CAAC,CAAC,EAAEF,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE5B,OAAO,CAAC2B,eAAe,EAAEL,KAAK,EAAEC,OAAO,CAAC,IAAIJ,OAAO,CAACW,SAAS,CAACF,YAAY,CAAC,EAAE;AAC3I;AACAjC,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}