{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nconst Utils_1 = require(\"./Utils\");\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\nclass EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n    this.touchEndHandler = () => this.mouseTouchFinish();\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n    this.mouseDownHandler = () => this.mouseDown();\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n    this.themeChangeHandler = e => this.handleThemeChange(e);\n    this.oldThemeChangeHandler = e => this.handleThemeChange(e);\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n  addListeners() {\n    this.manageListeners(true);\n  }\n  removeListeners() {\n    this.manageListeners(false);\n  }\n  manageListeners(add) {\n    var _a;\n    const container = this.container;\n    const options = container.actualOptions;\n    const detectType = options.interactivity.detectsOn;\n    let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n    if (detectType === Enums_1.InteractivityDetect.window) {\n      container.interactivity.element = window;\n      mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n    } else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n      const canvasEl = container.canvas.element;\n      container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n    const mediaMatch = !(0, Utils_1.isSsr)() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n    if (mediaMatch) {\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n      } else if (mediaMatch.addListener !== undefined) {\n        if (add) {\n          mediaMatch.addListener(this.oldThemeChangeHandler);\n        } else {\n          mediaMatch.removeListener(this.oldThemeChangeHandler);\n        }\n      }\n    }\n    const interactivityEl = container.interactivity.element;\n    if (!interactivityEl) {\n      return;\n    }\n    const html = interactivityEl;\n    if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n      manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n      } else {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n      }\n      manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n    }\n    if (container.canvas.element) {\n      container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n    }\n    if (options.interactivity.events.resize) {\n      if (typeof ResizeObserver !== \"undefined\") {\n        if (this.resizeObserver && !add) {\n          if (container.canvas.element) {\n            this.resizeObserver.unobserve(container.canvas.element);\n          }\n          this.resizeObserver.disconnect();\n          delete this.resizeObserver;\n        } else if (!this.resizeObserver && add && container.canvas.element) {\n          this.resizeObserver = new ResizeObserver(entries => {\n            const entry = entries.find(e => e.target === container.canvas.element);\n            if (!entry) {\n              return;\n            }\n            this.handleWindowResize();\n          });\n          this.resizeObserver.observe(container.canvas.element);\n        }\n      } else {\n        manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n      }\n    }\n    if (document) {\n      manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n  handleWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n      delete this.resizeTimeout;\n    }\n    this.resizeTimeout = setTimeout(() => {\n      var _a;\n      return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }, 500);\n  }\n  handleVisibilityChange() {\n    const container = this.container;\n    const options = container.actualOptions;\n    this.mouseTouchFinish();\n    if (!options.pauseOnBlur) {\n      return;\n    }\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw(true);\n      }\n    }\n  }\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n  mouseTouchMove(e) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const container = this.container;\n    const options = container.actualOptions;\n    if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n      return;\n    }\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n        const canvasEl = container.canvas.element;\n        if (source && target && canvasEl) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          const canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n          };\n        } else {\n          pos = {\n            x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n            y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n            y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n        y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n      };\n    }\n    const pxRatio = container.retina.pixelRatio;\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n  }\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n    if (interactivity === undefined) {\n      return;\n    }\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n  mouseTouchClick(e) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n    if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n    for (const [, plugin] of container.plugins) {\n      if (plugin.clickPositionValid !== undefined) {\n        handled = plugin.clickPositionValid(mousePosition);\n        if (handled) {\n          break;\n        }\n      }\n    }\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n    mouse.clicking = false;\n  }\n  doMouseTouchClick(e) {\n    const container = this.container;\n    const options = container.actualOptions;\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n      if (mousePos) {\n        container.interactivity.mouse.clickPosition = {\n          x: mousePos.x,\n          y: mousePos.y\n        };\n      } else {\n        return;\n      }\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n  handleThemeChange(e) {\n    const mediaEvent = e;\n    const themeName = mediaEvent.matches ? this.container.options.defaultDarkTheme : this.container.options.defaultLightTheme;\n    const theme = this.container.options.themes.find(theme => theme.name === themeName);\n    if (theme && theme.default.auto) {\n      this.container.loadTheme(themeName);\n    }\n  }\n  handleClickMode(mode) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const pushNb = options.interactivity.modes.push.quantity;\n    const removeNb = options.interactivity.modes.remove.quantity;\n    switch (mode) {\n      case Enums_1.ClickMode.push:\n        {\n          if (pushNb > 0) {\n            const pushOptions = options.interactivity.modes.push;\n            const group = (0, Utils_1.itemFromArray)([undefined, ...pushOptions.groups]);\n            const groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n          }\n          break;\n        }\n      case Enums_1.ClickMode.remove:\n        container.particles.removeQuantity(removeNb);\n        break;\n      case Enums_1.ClickMode.bubble:\n        container.bubble.clicking = true;\n        break;\n      case Enums_1.ClickMode.repulse:\n        container.repulse.clicking = true;\n        container.repulse.count = 0;\n        for (const particle of container.repulse.particles) {\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n        container.repulse.particles = [];\n        container.repulse.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.repulse.clicking = false;\n          }\n        }, options.interactivity.modes.repulse.duration * 1000);\n        break;\n      case Enums_1.ClickMode.attract:\n        container.attract.clicking = true;\n        container.attract.count = 0;\n        for (const particle of container.attract.particles) {\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n        container.attract.particles = [];\n        container.attract.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.attract.clicking = false;\n          }\n        }, options.interactivity.modes.attract.duration * 1000);\n        break;\n      case Enums_1.ClickMode.pause:\n        if (container.getAnimationStatus()) {\n          container.pause();\n        } else {\n          container.play();\n        }\n        break;\n    }\n    for (const [, plugin] of container.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n}\nexports.EventListeners = EventListeners;","map":{"version":3,"names":["Object","defineProperty","exports","value","EventListeners","Enums_1","require","Constants_1","Utils_1","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","themeChangeHandler","handleThemeChange","oldThemeChangeHandler","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","_a","actualOptions","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","InteractivityDetect","window","mouseOutEvent","parent","canvas","canvasEl","parentElement","parentNode","mediaMatch","isSsr","matchMedia","addListener","removeListener","interactivityEl","html","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseUpEvent","mouseDownEvent","touchCancelEvent","style","pointerEvents","resize","ResizeObserver","resizeObserver","unobserve","disconnect","entries","entry","find","target","observe","resizeEvent","document","visibilityChangeEvent","resizeTimeout","clearTimeout","setTimeout","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","_d","_e","_f","_g","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","mediaEvent","themeName","matches","defaultDarkTheme","defaultLightTheme","theme","themes","name","default","auto","loadTheme","pushNb","modes","push","quantity","removeNb","remove","ClickMode","pushOptions","group","itemFromArray","groups","groupOptions","particles","removeQuantity","bubble","repulse","count","particle","velocity","setTo","initialVelocity","finish","destroyed","duration","attract"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Utils/EventListeners.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nconst Utils_1 = require(\"./Utils\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = !(0, Utils_1.isSsr)() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(() => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, 500);\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.actualOptions;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e;\n        const themeName = mediaEvent.matches\n            ? this.container.options.defaultDarkTheme\n            : this.container.options.defaultLightTheme;\n        const theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    const pushOptions = options.interactivity.modes.push;\n                    const group = (0, Utils_1.itemFromArray)([undefined, ...pushOptions.groups]);\n                    const groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n                    container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.attract:\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}