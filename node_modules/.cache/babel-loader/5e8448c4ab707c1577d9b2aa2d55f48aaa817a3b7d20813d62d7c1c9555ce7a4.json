{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nconst Enums_1 = require(\"../../Enums\");\nclass AbsorberInstance {\n  constructor(absorbers, container, options, position) {\n    var _a, _b, _c, _d, _e;\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n    this.options = options;\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = (0, Utils_1.getRangeValue)(options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density * container.retina.reduceFactor;\n    const limit = options.size.limit;\n    this.limit = typeof limit === \"number\" ? {\n      radius: limit * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: 0\n    } : {\n      radius: ((_a = limit === null || limit === void 0 ? void 0 : limit.radius) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: (_b = limit === null || limit === void 0 ? void 0 : limit.mass) !== null && _b !== void 0 ? _b : 0\n    };\n    const color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_c = (0, Utils_1.colorToRgb)(color)) !== null && _c !== void 0 ? _c : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_e = (_d = this.initialPosition) === null || _d === void 0 ? void 0 : _d.copy()) !== null && _e !== void 0 ? _e : this.calcPosition();\n  }\n  attract(particle) {\n    const container = this.container;\n    const options = this.options;\n    if (options.draggable) {\n      const mouse = container.interactivity.mouse;\n      if (mouse.clicking && mouse.downPosition) {\n        const mouseDist = (0, Utils_1.getDistance)(this.position, mouse.downPosition);\n        if (mouseDist <= this.size) {\n          this.dragging = true;\n        }\n      } else {\n        this.dragging = false;\n      }\n      if (this.dragging && mouse.position) {\n        this.position.x = mouse.position.x;\n        this.position.y = mouse.position.y;\n      }\n    }\n    const pos = particle.getPosition();\n    const {\n      dx,\n      dy,\n      distance\n    } = (0, Utils_1.getDistances)(this.position, pos);\n    const v = Vector_1.Vector.create(dx, dy);\n    v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n    if (distance < this.size + particle.getRadius()) {\n      const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n      if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n        if (options.destroy) {\n          particle.destroy();\n        } else {\n          particle.needsNewPosition = true;\n          this.updateParticlePosition(particle, v);\n        }\n      } else {\n        if (options.destroy) {\n          particle.size.value -= sizeFactor;\n        }\n        this.updateParticlePosition(particle, v);\n      }\n      if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n        this.size += sizeFactor;\n      }\n      if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n        this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n      }\n    } else {\n      this.updateParticlePosition(particle, v);\n    }\n  }\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n  draw(context) {\n    context.translate(this.position.x, this.position.y);\n    context.beginPath();\n    context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStyle = (0, Utils_1.getStyleFromRgb)(this.color, this.opacity);\n    context.fill();\n  }\n  calcPosition() {\n    var _a, _b;\n    const container = this.container;\n    const percentPosition = this.options.position;\n    return Vector_1.Vector.create(((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width, ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height);\n  }\n  updateParticlePosition(particle, v) {\n    var _a;\n    if (particle.destroyed) {\n      return;\n    }\n    const container = this.container;\n    const canvasSize = container.canvas.size;\n    if (particle.needsNewPosition) {\n      particle.position.x = Math.floor(Math.random() * canvasSize.width);\n      particle.position.y = Math.floor(Math.random() * canvasSize.height);\n      particle.velocity.setTo(particle.initialVelocity);\n      particle.absorberOrbit = undefined;\n      particle.needsNewPosition = false;\n    }\n    if (this.options.orbits) {\n      if (particle.absorberOrbit === undefined) {\n        particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n        particle.absorberOrbit.length = (0, Utils_1.getDistance)(particle.getPosition(), this.position);\n        particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n      }\n      if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n        const minSize = Math.min(canvasSize.width, canvasSize.height);\n        particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n      }\n      if (particle.absorberOrbitDirection === undefined) {\n        particle.absorberOrbitDirection = particle.velocity.x >= 0 ? Enums_1.RotateDirection.clockwise : Enums_1.RotateDirection.counterClockwise;\n      }\n      const orbitRadius = particle.absorberOrbit.length;\n      const orbitAngle = particle.absorberOrbit.angle;\n      const orbitDirection = particle.absorberOrbitDirection;\n      particle.velocity.x = 0;\n      particle.velocity.y = 0;\n      const updateFunc = {\n        x: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.cos : Math.sin,\n        y: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.sin : Math.cos\n      };\n      particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n      particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n      particle.absorberOrbit.length -= v.length;\n      particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n    } else {\n      const addV = Vector_1.Vector.origin;\n      addV.length = v.length;\n      addV.angle = v.angle;\n      particle.velocity.addTo(addV);\n    }\n  }\n}\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AbsorberInstance","Utils_1","require","Vector_1","Enums_1","constructor","absorbers","container","options","position","_a","_b","_c","_d","_e","initialPosition","Vector","create","x","y","undefined","dragging","name","opacity","size","getRangeValue","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","colorToRgb","b","g","r","copy","calcPosition","attract","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","dx","dy","distance","getDistances","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","resize","isPointInside","canvas","draw","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","random","width","height","destroyed","canvasSize","floor","velocity","setTo","initialVelocity","orbits","angle","minSize","min","absorberOrbitDirection","RotateDirection","clockwise","counterClockwise","orbitRadius","orbitAngle","orbitDirection","updateFunc","cos","sin","moveSpeed","addV","origin","addTo"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nconst Enums_1 = require(\"../../Enums\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c, _d, _e;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = (0, Utils_1.getRangeValue)(options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit =\n            typeof limit === \"number\"\n                ? {\n                    radius: limit * container.retina.pixelRatio * container.retina.reduceFactor,\n                    mass: 0,\n                }\n                : {\n                    radius: ((_a = limit === null || limit === void 0 ? void 0 : limit.radius) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio * container.retina.reduceFactor,\n                    mass: (_b = limit === null || limit === void 0 ? void 0 : limit.mass) !== null && _b !== void 0 ? _b : 0,\n                };\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_c = (0, Utils_1.colorToRgb)(color)) !== null && _c !== void 0 ? _c : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_e = (_d = this.initialPosition) === null || _d === void 0 ? void 0 : _d.copy()) !== null && _e !== void 0 ? _e : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container;\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = (0, Utils_1.getDistance)(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = (0, Utils_1.getDistances)(this.position, pos);\n        const v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = (0, Utils_1.getStyleFromRgb)(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector_1.Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            particle.position.x = Math.floor(Math.random() * canvasSize.width);\n            particle.position.y = Math.floor(Math.random() * canvasSize.height);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n                particle.absorberOrbit.length = (0, Utils_1.getDistance)(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? Enums_1.RotateDirection.clockwise : Enums_1.RotateDirection.counterClockwise;\n            }\n            const orbitRadius = particle.absorberOrbit.length;\n            const orbitAngle = particle.absorberOrbit.angle;\n            const orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            const updateFunc = {\n                x: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.cos : Math.sin,\n                y: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector_1.Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}