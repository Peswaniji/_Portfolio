{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Move = void 0;\nconst Attract_1 = require(\"./Attract\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst Trail_1 = require(\"./Trail\");\nconst Path_1 = require(\"./Path/Path\");\nconst MoveAngle_1 = require(\"./MoveAngle\");\nconst MoveGravity_1 = require(\"./MoveGravity\");\nconst OutModes_1 = require(\"./OutModes\");\nconst Utils_1 = require(\"../../../../Utils\");\nconst Spin_1 = require(\"./Spin\");\nclass Move {\n  constructor() {\n    this.angle = new MoveAngle_1.MoveAngle();\n    this.attract = new Attract_1.Attract();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = Enums_1.MoveDirection.none;\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity_1.MoveGravity();\n    this.path = new Path_1.Path();\n    this.outModes = new OutModes_1.OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin_1.Spin();\n    this.straight = false;\n    this.trail = new Trail_1.Trail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  get collisions() {\n    return false;\n  }\n  set collisions(value) {}\n  get bounce() {\n    return this.collisions;\n  }\n  set bounce(value) {\n    this.collisions = value;\n  }\n  get out_mode() {\n    return this.outMode;\n  }\n  set out_mode(value) {\n    this.outMode = value;\n  }\n  get outMode() {\n    return this.outModes.default;\n  }\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n  get noise() {\n    return this.path;\n  }\n  set noise(value) {\n    this.path = value;\n  }\n  load(data) {\n    var _a, _b, _c;\n    if (data === undefined) {\n      return;\n    }\n    if (data.angle !== undefined) {\n      if (typeof data.angle === \"number\") {\n        this.angle.value = data.angle;\n      } else {\n        this.angle.load(data.angle);\n      }\n    }\n    this.attract.load(data.attract);\n    if (data.decay !== undefined) {\n      this.decay = data.decay;\n    }\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    if (data.distance !== undefined) {\n      this.distance = typeof data.distance === \"number\" ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : (0, Utils_1.deepExtend)({}, data.distance);\n    }\n    if (data.drift !== undefined) {\n      this.drift = (0, Utils_1.setRangeValue)(data.drift);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.gravity.load(data.gravity);\n    const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n    if (data.outModes !== undefined || outMode !== undefined) {\n      if (typeof data.outModes === \"string\" || data.outModes === undefined && outMode !== undefined) {\n        this.outModes.load({\n          default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode\n        });\n      } else {\n        this.outModes.load(data.outModes);\n      }\n    }\n    this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.speed !== undefined) {\n      this.speed = (0, Utils_1.setRangeValue)(data.speed);\n    }\n    this.spin.load(data.spin);\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n    this.trail.load(data.trail);\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}\nexports.Move = Move;","map":{"version":3,"names":["Object","defineProperty","exports","value","Move","Attract_1","require","Enums_1","Trail_1","Path_1","MoveAngle_1","MoveGravity_1","OutModes_1","Utils_1","Spin_1","constructor","angle","MoveAngle","attract","Attract","decay","distance","direction","MoveDirection","none","drift","enable","gravity","MoveGravity","path","Path","outModes","OutModes","random","size","speed","spin","Spin","straight","trail","Trail","vibrate","warp","collisions","bounce","out_mode","outMode","default","noise","load","data","_a","_b","_c","undefined","horizontal","vertical","deepExtend","setRangeValue"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Options/Classes/Particles/Move/Move.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Move = void 0;\nconst Attract_1 = require(\"./Attract\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst Trail_1 = require(\"./Trail\");\nconst Path_1 = require(\"./Path/Path\");\nconst MoveAngle_1 = require(\"./MoveAngle\");\nconst MoveGravity_1 = require(\"./MoveGravity\");\nconst OutModes_1 = require(\"./OutModes\");\nconst Utils_1 = require(\"../../../../Utils\");\nconst Spin_1 = require(\"./Spin\");\nclass Move {\n    constructor() {\n        this.angle = new MoveAngle_1.MoveAngle();\n        this.attract = new Attract_1.Attract();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = Enums_1.MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity_1.MoveGravity();\n        this.path = new Path_1.Path();\n        this.outModes = new OutModes_1.OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin_1.Spin();\n        this.straight = false;\n        this.trail = new Trail_1.Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : (0, Utils_1.deepExtend)({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = (0, Utils_1.setRangeValue)(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = (0, Utils_1.setRangeValue)(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\nexports.Move = Move;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}