{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loader = void 0;\nconst Container_1 = require(\"./Container\");\nconst Utils_1 = require(\"../Utils\");\nconst tsParticlesDom = [];\nfunction fetchError(statusCode) {\n  console.error(`Error tsParticles - fetch status: ${statusCode}`);\n  console.error(\"Error tsParticles - File config not found\");\n}\nclass Loader {\n  static dom() {\n    return tsParticlesDom;\n  }\n  static domItem(index) {\n    const dom = Loader.dom();\n    const item = dom[index];\n    if (item && !item.destroyed) {\n      return item;\n    }\n    dom.splice(index, 1);\n  }\n  static async loadOptions(params) {\n    var _a, _b, _c;\n    const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(Math.random() * 10000)}`;\n    const {\n      options,\n      index\n    } = params;\n    let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = tagId;\n      (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n    }\n    const currentOptions = options instanceof Array ? (0, Utils_1.itemFromArray)(options, index) : options;\n    const dom = Loader.dom();\n    const oldIndex = dom.findIndex(v => v.id === tagId);\n    if (oldIndex >= 0) {\n      const old = Loader.domItem(oldIndex);\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n    let canvasEl;\n    let generatedCanvas;\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      generatedCanvas = false;\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        if (!canvasEl.className) {\n          canvasEl.className = Utils_1.Constants.canvasClass;\n        }\n        generatedCanvas = false;\n      } else {\n        generatedCanvas = true;\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.className = Utils_1.Constants.canvasClass;\n        canvasEl.style.width = \"100%\";\n        canvasEl.style.height = \"100%\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n    const newItem = new Container_1.Container(tagId, currentOptions);\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n    newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n    await newItem.start();\n    return newItem;\n  }\n  static async loadRemoteOptions(params) {\n    const {\n      url: jsonUrl,\n      index\n    } = params;\n    const url = jsonUrl instanceof Array ? (0, Utils_1.itemFromArray)(jsonUrl, index) : jsonUrl;\n    if (!url) {\n      return;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      fetchError(response.status);\n      return;\n    }\n    const data = await response.json();\n    return await Loader.loadOptions({\n      tagId: params.tagId,\n      element: params.element,\n      index,\n      options: data\n    });\n  }\n  static load(tagId, options, index) {\n    const params = {\n      index\n    };\n    if (typeof tagId === \"string\") {\n      params.tagId = tagId;\n    } else {\n      params.options = tagId;\n    }\n    if (typeof options === \"number\") {\n      params.index = options !== null && options !== void 0 ? options : params.index;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n    return this.loadOptions(params);\n  }\n  static async set(id, domContainer, options, index) {\n    const params = {\n      index\n    };\n    if (typeof id === \"string\") {\n      params.tagId = id;\n    } else {\n      params.element = id;\n    }\n    if (domContainer instanceof HTMLElement) {\n      params.element = domContainer;\n    } else {\n      params.options = domContainer;\n    }\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n    return this.loadOptions(params);\n  }\n  static async loadJSON(tagId, jsonUrl, index) {\n    let url, id;\n    if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = jsonUrl;\n    }\n    return await Loader.loadRemoteOptions({\n      tagId: id,\n      url,\n      index\n    });\n  }\n  static async setJSON(id, domContainer, jsonUrl, index) {\n    let url, newId, newIndex, element;\n    if (id instanceof HTMLElement) {\n      element = id;\n      url = domContainer;\n      newIndex = jsonUrl;\n    } else {\n      newId = id;\n      element = domContainer;\n      url = jsonUrl;\n      newIndex = index;\n    }\n    return await Loader.loadRemoteOptions({\n      tagId: newId,\n      url,\n      index: newIndex,\n      element\n    });\n  }\n  static setOnClickHandler(callback) {\n    const dom = Loader.dom();\n    if (dom.length === 0) {\n      throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n    }\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n}\nexports.Loader = Loader;","map":{"version":3,"names":["Object","defineProperty","exports","value","Loader","Container_1","require","Utils_1","tsParticlesDom","fetchError","statusCode","console","error","dom","domItem","index","item","destroyed","splice","loadOptions","params","_a","_b","_c","tagId","Math","floor","random","options","domContainer","element","document","getElementById","createElement","id","querySelector","append","currentOptions","Array","itemFromArray","oldIndex","findIndex","v","old","destroy","canvasEl","generatedCanvas","tagName","toLowerCase","existingCanvases","getElementsByTagName","length","className","Constants","canvasClass","style","width","height","appendChild","newItem","Container","push","canvas","loadCanvas","start","loadRemoteOptions","url","jsonUrl","response","fetch","ok","status","data","json","load","set","HTMLElement","loadJSON","undefined","setJSON","newId","newIndex","setOnClickHandler","callback","Error","addClickHandler"],"sources":["C:/Users/peswa/Desktop/portfolio/My-portfolio/node_modules/tsparticles/Core/Loader.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Loader = void 0;\nconst Container_1 = require(\"./Container\");\nconst Utils_1 = require(\"../Utils\");\nconst tsParticlesDom = [];\nfunction fetchError(statusCode) {\n    console.error(`Error tsParticles - fetch status: ${statusCode}`);\n    console.error(\"Error tsParticles - File config not found\");\n}\nclass Loader {\n    static dom() {\n        return tsParticlesDom;\n    }\n    static domItem(index) {\n        const dom = Loader.dom();\n        const item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    static async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(Math.random() * 10000)}`;\n        const { options, index } = params;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = options instanceof Array ? (0, Utils_1.itemFromArray)(options, index) : options;\n        const dom = Loader.dom();\n        const oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = Loader.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        let generatedCanvas;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            generatedCanvas = false;\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                if (!canvasEl.className) {\n                    canvasEl.className = Utils_1.Constants.canvasClass;\n                }\n                generatedCanvas = false;\n            }\n            else {\n                generatedCanvas = true;\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.className = Utils_1.Constants.canvasClass;\n                canvasEl.style.width = \"100%\";\n                canvasEl.style.height = \"100%\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        const newItem = new Container_1.Container(tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n        await newItem.start();\n        return newItem;\n    }\n    static async loadRemoteOptions(params) {\n        const { url: jsonUrl, index } = params;\n        const url = jsonUrl instanceof Array ? (0, Utils_1.itemFromArray)(jsonUrl, index) : jsonUrl;\n        if (!url) {\n            return;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            fetchError(response.status);\n            return;\n        }\n        const data = await response.json();\n        return await Loader.loadOptions({\n            tagId: params.tagId,\n            element: params.element,\n            index,\n            options: data,\n        });\n    }\n    static load(tagId, options, index) {\n        const params = { index };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options !== null && options !== void 0 ? options : params.index;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    static async set(id, domContainer, options, index) {\n        const params = { index };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    static async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return await Loader.loadRemoteOptions({ tagId: id, url, index });\n    }\n    static async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return await Loader.loadRemoteOptions({ tagId: newId, url, index: newIndex, element });\n    }\n    static setOnClickHandler(callback) {\n        const dom = Loader.dom();\n        if (dom.length === 0) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\nexports.Loader = Loader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}